<table align="left">
    <tr>
        <td>
            <a href="http://webservice.recruit.co.jp/"><img src="http://webservice.recruit.co.jp/banner/hotpepper-s.gif"
                    alt="ホットペッパーグルメ Webサービス" width="135" height="17" border="0" title="ホットペッパーグルメ Webサービス"></a>
        </td>
        <td>
            【画像提供：ホットペッパー グルメ】
        </td>
    </tr>
</table>
<br><br>
<table align="left">
    <tr>
        <td>
            <h4><b>店舗検索ページです．店舗名と検索半径を指定できます．</b></h4>
        </td>
    </tr>
    <tr>
        <td>
            <h4><b>100件まで表示できます．</b></h4>
        </td>
    </tr>
</table>

<hr width="600" size="3" noshade>

<table align="center" cellpadding="20">
    <tr>
        <td>
            <p>店舗名<br>
                <input type="text" id="store_name">
            </p>
        </td>
        <td>
            <p>現在地からの検索半径<br>
                <select class="form-select" aria-label="Default select example" id="range">
                    <option value="1">300m</option>
                    <option value="2">500m</option>
                    <option value="3">1000m</option>
                    <option value="4">2000m</option>
                    <option value="5">3000m</option>
                </select>
            </p>
        </td>
        <td>
            <button type="button" class="btn btn-success btn-lg" onclick="getLocation()">検索</button><br>
        </td>
    </tr>
</table>

<table align="center">
    <tr>
        <td>
            <div id="status"></div>
        </td>
    </tr>
</table>

<table width="450" align="center" cellpadding="1" style="table-layout: fixed;">
    <tr>
        <td>
            <div id="rn_list"></div>
        </td>
    </tr>
</table>

<script>
    let URL = ''

    let store_name = document.getElementById("store_name");
    let range = document.getElementById("range");

    const status = document.getElementById("status");

    function getLocation() {
        var options = {
            // 位置情報報取得に10秒以上かかったらタイムアウトする
            timeout: 10000
        };
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(successCallback, errorCallback, options);
        } else {
            status.textContent = "このブラウザは位置情報に対応していません．";
        }
    };

    // 位置情報取得に成功した場合
    function successCallback(position) {
        status.textContent = "";
        restaurant_name = "";

        // store_nameが入力された場合，検索URLにstore_nameを反映する
        if (!(store_name.value)) {
            URL =
                `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=<%= ENV["HOT_PEPPER_API_KEY"]%>&lat=${position.coords.latitude}&lng=${position.coords.longitude}&range=${range.value}&count=100&format=json`;
        } else {
            URL =
                `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=<%= ENV["HOT_PEPPER_API_KEY"]%>&name=${store_name.value}&lat=${position.coords.latitude}&lng=${position.coords.longitude}&range=${range.value}&count=100&format=json`;
        }

        $.ajax({
            type: 'GET',
            url: URL,
        }).then(function (response) {
            const data = JSON.parse(response)
            console.log(data)

            if (data.results.results_available == 0) {
                status.textContent = "１件もありませんでした．";
            }

            //rn_listを初期化
            document.getElementById("rn_list").innerHTML = "";

            for (let i = 0; i < data.results.shop.length; i++) {
                // jQueryを使って店舗情報を取得
                $("#rn_list").append('<div style="text-align:center;"><img src="' +
                    data.results.shop[i].logo_image + '"></div>');
                $("#rn_list").append("店舗名称：" + data.results.shop[i].name + "(" +
                    data.results.shop[i].name_kana + ")" + "<br>");
                $("#rn_list").append("交通アクセス：" + data.results.shop[i].access + "<br>");
                $("#rn_list").append("携帯用交通アクセス：" + data.results.shop[i].mobile_access + "</li><br>");

                // 店舗詳細用のボタン配置，対応する番号を/detailにpost
                // detailで使うものも送信すべき（ruby側でデータベースに保存するため）
                $("#rn_list").append('<div style="text-align:right;"><form action="/detail" method="post">' +
                    '<td><input class="btn btn-primary btn-lg" type="submit" value="詳細"></td>' +
                    // 配列番号(id)
                    '<input type="hidden" name="r_id" value=' + i + '>' +
                    // 掲載店名(name)
                    '<input type="hidden" name="r_name" value="<%="' +
                    data.results.shop[i].name + '"%>">' +
                    // 掲載店名かな(name_kana)
                    '<input type="hidden" name="r_name_kana" value="<%="' +
                    data.results.shop[i].name_kana + '"%>">' +
                    // ロゴ画像URL(logo_image)
                    '<input type="hidden" name="r_logoimage_url" value="<%="' +
                    data.results.shop[i].logo_image + '"%>">' +
                    // 住所(address)
                    '<input type="hidden" name="r_address" value="<%="' +
                    data.results.shop[i].address + '"%>">' +
                    // 交通アクセス(access)
                    '<input type="hidden" name="r_access" value="<%="' +
                    data.results.shop[i].access + '"%>">' +
                    // 携帯用交通アクセス(mobile_access)
                    '<input type="hidden" name="r_mobile_access" value="<%="' +
                    data.results.shop[i].mobile_access + '"%>">' +
                    // 写真，PC向け，中URL(photo_url)
                    '<input type="hidden" name="r_photo_url" value="<%="' +
                    data.results.shop[i].photo.pc.m + '"%>">' +
                    // 営業時間(open)
                    '<input type="hidden" name="r_open" value="<%="' +
                    data.results.shop[i].open + '"%>">' +
                    // 定休日(close)
                    '<input type="hidden" name="r_close" value="<%="' +
                    data.results.shop[i].close + '"%>">' +
                    '</form></div><br><br>');
            }
        })
    };

    // 位置情報取得に失敗した場合
    function errorCallback(error) {
        status.textContent = "";

        switch (error.code) {
            case error.PERMISSION_DENIED:
                // 位置情報の取得がユーザーによって拒否された場合の処理
                status.textContent = "位置情報の取得がユーザーによって拒否されました．";
                break;
            case error.POSITION_UNAVAILABLE:
                // 位置情報の取得ができない場合の処理
                status.textContent = "位置情報の取得ができませんでした．";
                break;
            case error.TIMEOUT:
                // 位置情報の取得がタイムアウトした場合の処理
                status.textContent = "位置情報の取得がタイムアウトしました．";
                break;
            default:
                // その他のエラーが発生した場合の処理
                status.textContent = "予期せぬエラーが発生しました．";
                break;
        }
    };
</script>